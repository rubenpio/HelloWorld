pipeline {
    agent any
 environment {
        UNIT_TEST_COMPLETED = 'false'
    }

     stages {
        stage('Get Code') {
            steps {
                git 'https://github.com/anieto-unir/helloworld.git'
            }
        }
    
        stage('Build') {
           steps {
              echo 'Holaaa '
              echo WORKSPACE
              bat 'dir'
           }
        }

    stage('Tests') {
     steps {
     parallel(
        unitTest: {
            catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                bat '''
                    set PYTHONPATH=%WORKSPACE%
                    pytest --junitxml=result-unit.xml test\\unit
                '''
                script {
                        env.UNIT_TEST_COMPLETED = 'true'
                    }
          }
        },
        restTest: {
            catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                script {
                   when {
                expression {
                    return env.UNIT_TEST_COMPLETED == 'true'
                }
            }
                }
                bat '''
                    set PYTHONPATH=%WORKSPACE%
                    set FLASK_APP=app\\api.py
                    set FLASK_ENV=development
                    start flask run
                    start java -jar "D:\\Devops & Cloud\\wiremock-standalone-3.3.1.jar" --port 9090 --root-dir "D:\\Devops & Cloud\\helloworld\\test\\wiremock" 
                    pytest --junitxml=result-rest.xml test\\rest
                '''
            }
        }
    )
 }
}

        stage('Results') {
            steps {
                junit 'result*.xml' 
            }
        }
     
    }
}
