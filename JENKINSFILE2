pipeline {
    agent none

    stages {
        stage('Get Code') {
            agent { label 'windows' }
            steps {
                script {
                    bat '''
                        whoami
                        hostname
                    '''
                    echo WORKSPACE
                    git 'https://github.com/anieto-unir/helloworld.git'
                    stash includes: '**/*', name: 'code', allowEmpty: true
                }
            }
        }

        stage('Build') {
            agent { label 'windows' }
            steps {
                script {
                    echo WORKSPACE
                    bat '''
                        dir
                        whoami
                        hostname
                    '''
                }      
            }
        }

        stage('Tests') {
            agent { label 'python' }
            steps {
            parallel(
            unitTest: {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    bat '''
                        set PYTHONPATH=%WORKSPACE%
                        pytest --junitxml=result-unit.xml test\\unit
                        whoami
                        hostname
                        '''
                        echo WORKSPACE
                }
            },
            restTest: {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    bat '''
                        set PYTHONPATH=%WORKSPACE%
                        set FLASK_APP=app\\api.py
                        set FLASK_ENV=development
                        start flask run
                        start java -jar "D:\\Devops & Cloud\\wiremock-standalone-3.3.1.jar" --port 9090 --root-dir "D:\\Devops & Cloud\\helloworld\\test\\wiremock"
                        pytest --junitxml=result-rest.xml test\\rest
                    '''
            }
        }
    )
  scripts {
        stash includes: '**/*', name: 'code'
 }
}
}

        stage('Results') {
            agent { label 'windows' }
            steps {
                script {
                    unstash 'code'
                    junit 'result*.xml'
                    bat '''
                        whoami
                        hostname
                    '''
                    echo WORKSPACE
                    deleteDir()  // Esta l√≠nea borra el espacio de trabajo al final del pipeline
                }
            }
        }
    }
}
